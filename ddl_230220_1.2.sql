--  =========== SMOREDB =========== --
DROP SCHEMA IF EXISTS SMOREDB;
CREATE SCHEMA SMOREDB;
USE SMOREDB;

-- ============================ 멤버 ============================
-- DROP TABLE MEMBER;
CREATE TABLE MEMBER (
    MEMNO INT  PRIMARY KEY AUTO_INCREMENT,
    ID VARCHAR(30) NOT NULL UNIQUE,
    PASSWORD VARCHAR(100) NOT NULL,
    ROLE VARCHAR(10) DEFAULT 'ROLE_USER',
    NAME VARCHAR(15) NOT NULL,
    PHONE VARCHAR(11),
    EMAIL VARCHAR(100),
    ADDRESS VARCHAR(100),
    KAKAOTOKEN VARCHAR(1000),
    STATUS VARCHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N')),
    ENROLLDATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
    MODIFYDATE DATETIME DEFAULT CURRENT_TIMESTAMP
);

SELECT * FROM MEMBER;

-- ============================ 게시판 ============================
-- DROP TABLE IF EXISTS BOARD;
CREATE TABLE BOARD (	
    BBNO INT AUTO_INCREMENT PRIMARY KEY,
    MEMNO INT, 
	TITLE VARCHAR(50), 
	CONTENT VARCHAR(2000), 
	TYPE VARCHAR(10),   -- notice 공지사항, free 자유게시판, question 건의게시판,  
	ORIGINAL_FILENAME VARCHAR(100), 
	RENAMED_FILENAME VARCHAR(100), 
	READCOUNT INT DEFAULT 0, 
    STATUS VARCHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N')),
    CREATE_DATE DATETIME  DEFAULT CURRENT_TIMESTAMP, 
    MODIFY_DATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY(MEMNO) REFERENCES MEMBER(MEMNO) ON DELETE SET NULL
);
SELECT * FROM BOARD;

-- 리플
CREATE TABLE BOARD_REPLY(
	BBRNO INT PRIMARY KEY AUTO_INCREMENT,
    BBNO INT,
    MEMNO INT,
    CONTENT VARCHAR(400),
    CREATE_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFY_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (BBNO) REFERENCES BOARD(BBNO),
	FOREIGN KEY (MEMNO) REFERENCES MEMBER(MEMNO)
);

select * from board_reply;

-- 좋아요
CREATE TABLE BOARD_LIKE (
    MEMNO    INT,
    BBNO     INT,
    PRIMARY KEY (MEMNO, BBNO),
    FOREIGN KEY(MEMNO) REFERENCES MEMBER(MEMNO),
    FOREIGN KEY(BBNO) REFERENCES BOARD(BBNO)
);

-- ============================ 중고거래게시판 ============================
-- DROP TABLE IF EXISTS TRADE;
CREATE TABLE  TRADE (        
    tradeNo INT AUTO_INCREMENT PRIMARY KEY, -- 게시글번호
    WRITER_NO INT, -- 작성자 일련번호
    WRITER_ID VARCHAR(100), -- 작성자아이디
    TYPE VARCHAR(50) NOT NULL,   -- 중고거래, 재능거래
    CATEGORY VARCHAR(50) NOT NULL, -- 카테고리
    REGION VARCHAR(50) NOT NULL,  -- 지역
    TITLE VARCHAR(50) NOT NULL,  -- 제목
    CONDITIONS VARCHAR(50) NOT NULL,  -- 물건상태
    PRICE VARCHAR(50) NOT NULL, -- 가격
    CONTENT VARCHAR(2000) NOT NULL,  -- 내용
    ORIGINAL_FILENAME VARCHAR(100), -- 원래 파일 이름
    RENAMED_FILENAME VARCHAR(100),  -- 바뀐 파일 이름
    READCOUNT INT DEFAULT 0,  -- 조회수
    STATUS VARCHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N')), -- 상태 y, n
    CREATEDATE DATETIME  DEFAULT CURRENT_TIMESTAMP,  -- 최초 작성일
    MODIFYDATE DATETIME  DEFAULT CURRENT_TIMESTAMP,  -- 수정일
    FOREIGN KEY(WRITER_NO) REFERENCES MEMBER(memNo) ON DELETE SET NULL,
    CONSTRAINT FK_TRADE_WRITER FOREIGN KEY(writer_No) REFERENCES MEMBER(memNo) ON DELETE SET NULL
);

select * from trade;

-- 중고거래 리플1
-- DROP TABLE IF EXISTS REPLY_TRADE;
CREATE TABLE Reply_Trade(
  tradeRNo INT PRIMARY KEY AUTO_INCREMENT,
  tradeNo INT,
  WRITER_NO INT,
  WRITER_ID VARCHAR(50),
  CONTENT VARCHAR(400),
  STATUS VARCHAR(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')),
  CREATEDATE DATETIME DEFAULT CURRENT_TIMESTAMP,
  MODIFYDATE DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (tradeNo) REFERENCES TRADE(tradeNo),
  FOREIGN KEY (WRITER_NO) REFERENCES MEMBER(memNo)
);

-- 중고/재능 게시글 스크랩
-- DROP TABLE CLIP_TRADE CASCADE CONSTRAINTS;
CREATE TABLE CLIP_TRADE(
    memNo         INT,
    tradeNo       INT,
    PRIMARY KEY (memNo, tradeNo),
    FOREIGN KEY (memNo) REFERENCES MEMBER(memNo),
    FOREIGN KEY (tradeNo) REFERENCES TRADE(tradeNo)
);
select * from clip_trade;

-- ============================ 공공주택 모집공고 조회 서비스 ============================
-- DROP TABLE IF EXISTS rentalHouse;
CREATE TABLE rentalHouse(
rentalNo int AUTO_INCREMENT PRIMARY KEY, 
rentalType VARCHAR(200), 
suplyHoCo VARCHAR(200), 
pblancId VARCHAR(200), 
houseSn int, 
sttusNm VARCHAR(200), 
pblancNm VARCHAR(200), 
suplyInsttNm VARCHAR(200), 
houseTyNm VARCHAR(200), 
suplyTyNm VARCHAR(200), 
beforePblancId VARCHAR(200), 
rcritPblancDe VARCHAR(200), 
przwnerPresnatnDe VARCHAR(200), 
refrnc VARCHAR(200), 
url VARCHAR(200), 
pcUrl VARCHAR(200), 
mobileUrl VARCHAR(200), 
hsmpNm VARCHAR(200), 
brtcNm VARCHAR(200), 
signguNm VARCHAR(200), 
fullAdres VARCHAR(200), 
rnCodeNm VARCHAR(200), 
refrnLegaldongNm VARCHAR(200), 
pnu VARCHAR(200), 
heatMthdNm VARCHAR(200), 
totHshldCo VARCHAR(200), 
sumSuplyCo int, 
rentGtn int, 
enty int, 
prtpay int, 
surlus int, 
mtRntchrg int, 
beginDe VARCHAR(200), 
endDe VARCHAR(200)
);
SELECT * FROM rentalHouse;


-- 공공주택 모집공고 조회 서비스 스크랩
-- DROP TABLE IF EXISTS CLIP_RENTALHOUSE;
CREATE TABLE CLIP_RENTALHOUSE(
	memNo         INT,
    rentalNo          INT,
    PRIMARY KEY (memNo, rentalNo),
    FOREIGN KEY (memNo) REFERENCES MEMBER(memNo),
    FOREIGN KEY (rentalNo) REFERENCES RENTALHOUSE(rentalNo)
);

-- ============================ 1인가구 정부지원사업정보 서비스 ============================
-- DROP TABLE IF EXISTS ONEPROGRAM;
CREATE TABLE ONEPROGRAM(
onepNo INT PRIMARY KEY AUTO_INCREMENT,
PARTCPTN_ID VARCHAR(100),
PARTCPTN_SJ VARCHAR(100),
TY_NM VARCHAR(100),
SE_NM VARCHAR(100),
ATDRC_NM VARCHAR(100),
RCEPT_DE1 DATE,
RCEPT_DE2 DATE,
PROGRS_DE1 DATE,
PROGRS_DE2 DATE,
AGRDE_NM VARCHAR(50),
SEXDSTN_NM VARCHAR(100),
TRGET_INFO VARCHAR(300),
TME INT,
PARTCPTN_NMPR VARCHAR(50),
PARTCPT_CT_NM VARCHAR(100),
PARTCPT_AMOUNT VARCHAR(100),
RCEPT_MTH_NM VARCHAR(100),
RCEPT_MTH_LINK VARCHAR(300),
PROGRS_INQRY VARCHAR(100),
PLACE_ADRES1 VARCHAR(100),
PLACE_ADRES2 VARCHAR(100),
CN VARCHAR(10000),
REG_DATE2 DATE,
INSTT_NM VARCHAR(100)
);
SELECT * FROM ONEPROGRAM;
-- 1인가구 정부지원사업정보 스크랩
-- DROP TABLE IF EXISTS CLIP_ONEPROGRAM;
CREATE TABLE CLIP_ONEPROGRAM(
    onepNo        INT,
	memNo           INT,
    FOREIGN KEY (onepNo) REFERENCES ONEPROGRAM(onepNo),
    FOREIGN KEY (memNo) REFERENCES MEMBER(memNo)
);

-- ============================ 레시피1 ============================
-- DROP TABLE IF EXISTS RECIPE;
CREATE TABLE RECIPE (
rcpNo INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
RCP_NM VARCHAR(100),
RCP_WAY2 VARCHAR(100),
RCP_PAT2 VARCHAR(100),
INFO_WGT VARCHAR(100),
INFO_ENG VARCHAR(100),
INFO_CAR VARCHAR(100),
INFO_PRO VARCHAR(100),
INFO_FAT VARCHAR(100),
INFO_NA VARCHAR(100),
HASH_TAG VARCHAR(200),
ATT_FILE_NO_MAIN VARCHAR(500),
ATT_FILE_NO_MK VARCHAR(500),
RCP_PARTS_DTLS VARCHAR(1000),
MANUAL01 VARCHAR(500),
MANUAL_IMG01 VARCHAR(500),
MANUAL02 VARCHAR(500),
MANUAL_IMG02 VARCHAR(500),
MANUAL03 VARCHAR(500),
MANUAL_IMG03 VARCHAR(500),
MANUAL04 VARCHAR(500),
MANUAL_IMG04 VARCHAR(500),
MANUAL05 VARCHAR(500),
MANUAL_IMG05 VARCHAR(500),
MANUAL06 VARCHAR(500),
MANUAL_IMG06 VARCHAR(500),
MANUAL07 VARCHAR(500),
MANUAL_IMG07 VARCHAR(500),
MANUAL08 VARCHAR(500),
MANUAL_IMG08 VARCHAR(500),
MANUAL09 VARCHAR(500),
MANUAL_IMG09 VARCHAR(500),
MANUAL10 VARCHAR(100),
MANUAL_IMG10 VARCHAR(100),
MANUAL11 VARCHAR(100),
MANUAL_IMG11 VARCHAR(100),
MANUAL12 VARCHAR(100),
MANUAL_IMG12 VARCHAR(100),
MANUAL13 VARCHAR(100),
MANUAL_IMG13 VARCHAR(100),
MANUAL14 VARCHAR(100),
MANUAL_IMG14 VARCHAR(100),
MANUAL15 VARCHAR(100),
MANUAL_IMG15 VARCHAR(100),
MANUAL16 VARCHAR(100),
MANUAL_IMG16 VARCHAR(100),
MANUAL17 VARCHAR(100),
MANUAL_IMG17 VARCHAR(100),
MANUAL18 VARCHAR(100),
MANUAL_IMG18 VARCHAR(100),
MANUAL19 VARCHAR(100),
MANUAL_IMG19 VARCHAR(100),
MANUAL20 VARCHAR(100),
MANUAL_IMG20 VARCHAR(100)
);
select * from recipe;

-- 리플
-- DROP TABLE IF EXISTS REVIEW_RCP;
CREATE TABLE REVIEW_RCP(
  rcprNo INT PRIMARY KEY AUTO_INCREMENT,
  rcpNo INT,
  memNo INT,
  WRITER VARCHAR(15),
  WRITER_NAME VARCHAR(15),
  CONTENT VARCHAR(400),
  SCORE INT,
  STATUS VARCHAR(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')),
  CREATE_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
  MODIFY_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (rcpNo) REFERENCES RECIPE(rcpNo),
  FOREIGN KEY (memNo) REFERENCES MEMBER(memNo)
);

-- 좋아요
-- DROP TABLE IF EXISTS LIKE_RECIPE;
CREATE TABLE LIKE_RECIPE (
    rcpNo    INT,
    memNo    INT,
    FOREIGN KEY(memNo) REFERENCES MEMBER(memNo),
    FOREIGN KEY(rcpNo) REFERENCES RECIPE(rcpNo)
);
-- 레시피 스크랩
-- DROP TABLE IF EXISTS CLIP_RCP;
CREATE TABLE CLIP_RCP(
    rcpNo    INT,
    memNo    INT,
    FOREIGN KEY(memNo) REFERENCES MEMBER(memNo),
    FOREIGN KEY(rcpNo) REFERENCES RECIPE(rcpNo)
);
-- ============================ 산책로 ============================
-- DROP TABLE IF EXISTS TRACKING;
CREATE TABLE TRACKING(
TNO INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
COURSE_CATEGORY LONG,
COURSE_CATEGORY_NM VARCHAR(50),
AREA_GU VARCHAR(20), 
DISTANCE VARCHAR(20),
LEAD_TIME VARCHAR(100),
COURSE_LEVEL VARCHAR(10),
RELATE_SUBWAY VARCHAR(100),
TRAFFIC_INFO VARCHAR(3000),
CONTENT VARCHAR(3000),
COURSE_NAME VARCHAR(200),
DETAIL_COURSE VARCHAR(1000),
CPI_NAME VARCHAR(50),
CPI_CONTENT VARCHAR(2000),
LATITUDE DOUBLE,
LONGITUDE DOUBLE
);

-- 산책로 댓글
-- DROP TABLE IF EXISTS REPLY_TRACKING;
CREATE TABLE REPLY_TRACKING(
  TRno INT PRIMARY KEY AUTO_INCREMENT,
  TNO INT,
  memNo INT,
  WRITER VARCHAR(15),
  WRITER_NAME VARCHAR(15),
  CONTENT VARCHAR(400),
  STATUS VARCHAR(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')),
  CREATE_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
  MODIFY_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (TNO) REFERENCES TRACKING(TNO),
  FOREIGN KEY (memNo) REFERENCES MEMBER(memNo)
);
SELECT * FROM TRACKING;

CREATE TABLE CLIP_TRACKING(
    TNO       INT,
	memNo        INT,
    FOREIGN KEY (TNO) REFERENCES TRACKING(TNO),
    FOREIGN KEY (memNo) REFERENCES MEMBER(memNo)
);

-- ============================ 공원 ============================
-- DROP TABLE IF EXISTS PARK;
CREATE TABLE PARK (
parkNo INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
manageNo VARCHAR(1000),
parkNm VARCHAR(1000),
parkSe VARCHAR(1000),
rdnmadr VARCHAR(1000),
lnmadr VARCHAR(1000),
latitude DOUBLE,
longitude DOUBLE,
parkAr DOUBLE,
mvmFclty VARCHAR(1000),
amsmtFclty VARCHAR(1000),
cnvnncFclty VARCHAR(1000),
cltrFclty VARCHAR(1000),
etcFclty VARCHAR(1000),
appnNtfcDate DATE,
institutionNm VARCHAR(1000),
phoneNumber VARCHAR(1000),
referenceDate DATE,
insttCode INT
);
SELECT * FROM PARK;

-- 공원 댓글
-- DROP TABLE IF EXISTS REPLY_PARK;
CREATE TABLE REPLY_PARK(
  parkRno INT PRIMARY KEY AUTO_INCREMENT,
  parkNo INT,
  memNo INT,
  WRITER VARCHAR(15),
  WRITER_NAME VARCHAR(15),
  CONTENT VARCHAR(400),
  STATUS VARCHAR(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')),
  CREATE_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
  MODIFY_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (parkNo) REFERENCES PARK(parkNo),
  FOREIGN KEY (memNo) REFERENCES MEMBER(memNo)
);

-- 공원 스크랩
-- DROP TABLE IF EXISTS CLIP_PARK;
CREATE TABLE CLIP_PARK(
    parkNo       INT,
	memNo        INT,
    FOREIGN KEY (parkNo) REFERENCES PARK(parkNo),
    FOREIGN KEY (memNo) REFERENCES MEMBER(memNo)
);

select * from clip_park;

-- ============================ 가계부 ============================
-- DROP TABLE IF EXISTS HOUSEBUDGET;
CREATE TABLE HOUSEBUDGET(
	MEMNO INT,
	TYPE VARCHAR(10),
	TITLE VARCHAR(30),
	AMOUNT INT,
	MEMO VARCHAR(100),
	START DATE,
    FOREIGN KEY (MEMNo) REFERENCES MEMBER(MEMNo)
);

-- ============================ 네이버쇼핑 ============================
-- DROP TABLE IF EXISTS Product;
create table Product (
	  pNo int auto_increment primary key,
	  title varchar(1000), 
	  link varchar(1000),
	  image varchar(1000),
	  lprice int,
	  hprice int,
	  mallName varchar(1000),
	  productId varchar(1000),
	  productType varchar(1000),
	  maker varchar(1000),
	  brand varchar(1000),
	  category1 varchar(1000),
	  category2 varchar(1000),
	  category3 varchar(1000),
	  category4 varchar(1000),
      scoreAVG double
);

-- ============================ 네이버뉴스 ============================
-- DROP TABLE News;
CREATE TABLE NEWS (
	NNO int auto_increment primary key,
	TITLE varchar(1000),
	ORIGINALLINK varchar(1000),
	LINK varchar(1000),
	DESCRIPTION varchar(1000),
	PUBDATE datetime
);

COMMIT;